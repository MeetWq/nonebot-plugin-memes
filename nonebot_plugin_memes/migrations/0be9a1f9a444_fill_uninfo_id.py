"""fill_uninfo_id

迁移 ID: 0be9a1f9a444
父迁移: a0749ed48096
创建时间: 2024-10-27 13:55:52.067493

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session

revision: str = "0be9a1f9a444"
down_revision: str | Sequence[str] | None = "a0749ed48096"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = "6f1edf4c1af7"


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    Base = automap_base()
    Base.prepare(autoload_with=conn)
    MemeGenerationRecord = Base.classes.nonebot_plugin_memes_memegenerationrecord

    with Session(conn) as db_session:
        count = db_session.query(MemeGenerationRecord).count()
        if count == 0:
            return

    try:
        from nonebot_session_to_uninfo import check_tables, get_id_map
    except ImportError:
        raise ValueError("请安装 `nonebot-session-to-uninfo` 以完成迁移")

    check_tables()

    with Session(conn) as db_session:
        session_ids = list(
            db_session.scalars(sa.select(MemeGenerationRecord.session_persist_id)).all()
        )

    id_map = get_id_map(session_ids)

    with Session(conn) as db_session:
        for session_id, uninfo_id in id_map.items():
            db_session.execute(
                sa.update(MemeGenerationRecord)
                .where(MemeGenerationRecord.session_persist_id == session_id)
                .values(uninfo_persist_id=uninfo_id)
            )
        db_session.commit()
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
